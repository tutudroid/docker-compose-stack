
##########################################################################
##                         AUTO-GENERATED FILE                          ##
##               BUILD_NUMBER=Sat 24 Feb 2018 19:03:25 +07              ##
##########################################################################
### 2018.3.30 delete gailvlun3,and gailvlun4, ws3, and ws4

version: '3'
networks:
    cluster:
        driver: bridge
    ws-redis:
    celery-broker:

volumes:
    pgmaster:
    pgslave1:
    pgslave2:
    pgslave3:
    pgslave4:
    backup:

services:
    gailvlun1:
        restart: always
        build:
            context: ../django
            dockerfile: Dockerfile
        environment:
            DJANGO_SETTINGS_MODULE: "gailvlun.settings.production"
        ports:
            - "8021:8011"
            - "3032:3031"
            - "8080:8080"
        sysctls:
            net.core.somaxconn: 10240
        ulimits:
            nproc: 65535
            nofile:
               soft: 20000
               hard: 40000
        depends_on:
            - "pgmaster"
            - "pgslave1"
            - "pgslave2"
            - "pgslave3"
            - "pgslave4"
        networks:
           celery-broker:
           ws-redis:
           cluster:
             aliases:
                - gailvlun1
        volumes:
           - /home/django/new_gai_dep/log/gailvlun1:/tmp
           - /etc/localtime:/etc/localtime:ro
           - /home/django/new_gai_dep/gailvlun:/home/django/gailvlun
    gailvlun2:
        restart: always
        build:
            context: ../django
            dockerfile: Dockerfile
        environment:
            DJANGO_SETTINGS_MODULE: "gailvlun.settings.production"
        ports:
            - "8022:8011"
            - "3033:3031"
        depends_on:
            - "pgmaster"  
        sysctls:
            net.core.somaxconn: 10240
        networks:
           celery-broker:
           ws-redis:
           cluster:
              aliases:
                - gailvlun2
        volumes:
           - /home/django/new_gai_dep/log/gailvlun2:/tmp
           - /etc/localtime:/etc/localtime:ro
           - /home/django/new_gai_dep/gailvlun:/home/django/gailvlun
     celery1:
        restart: always
        build:
            context: ../celery
            dockerfile: Dockerfile
        environment:
            DJANGO_SETTINGS_MODULE: "gailvlun.settings.production"
        depends_on:
            - "pgmaster"  
        networks:
           celery-broker:
           ws-redis:
        volumes:
           - /home/django/new_gai_dep/log/celery1:/tmp
           - /etc/localtime:/etc/localtime:ro
           - /home/django/new_gai_dep/gailvlun:/home/django/gailvlun
     celery2:
        restart: always
        build:
            context: ../celery
            dockerfile: Dockerfile
        environment:
            DJANGO_SETTINGS_MODULE: "gailvlun.settings.production"
        networks:
           celery-broker:
           ws-redis:
        volumes:
           - /home/django/new_gai_dep/log/celery2:/tmp
           - /etc/localtime:/etc/localtime:ro
           - /home/django/new_gai_dep/gailvlun:/home/django/gailvlun
      beat1:
        restart: always
        build:
            context: ../beat
            dockerfile: Dockerfile
        environment:
            DJANGO_SETTINGS_MODULE: "gailvlun.settings.production"
        depends_on:
            - "pgmaster"  
        networks:
           celery-broker:
           ws-redis:
        volumes:
           - /home/django/new_gai_dep/log/beat1:/tmp
           - /etc/localtime:/etc/localtime:ro
           - /home/django/new_gai_dep/gailvlun:/home/django/gailvlun
   redis2:
        restart: always
        build:
           context: ../redis
           dockerfile: Dockerfile
        ports:
            - "6383:6379"
        networks:
           celery-broker:
        volumes:
           - /home/django/new_gai_dep/data/redis2:/data
    ws1:
        restart: always
        build:
            context: ../ws
            dockerfile: ws-python2.7-Dockerfile
        environment:
            DJANGO_SETTINGS_MODULE: "gailvlun.settings.production"
        ports:
            - "8891:8888"
        networks:
           ws-redis:
        volumes:
           - /etc/localtime:/etc/localtime:ro
           - /home/django/new_gai_dep/log/ws1:/tmp
           - /home/django/new_gai_dep/gailvlun:/home/django/gailvlun
           - /home/django/new_gai_dep/all_project/api.gailvlun.site:/etc/letsencrypt/live/api.gailvlun.site:ro
    ws2:
        restart: always
        build:
            context: ../ws
            dockerfile: ws-python2.7-Dockerfile
        environment:
            DJANGO_SETTINGS_MODULE: "gailvlun.settings.production"
        ports:
            - "8892:8888"
        networks:
           ws-redis:
        volumes:
           - /etc/localtime:/etc/localtime:ro
           - /home/django/new_gai_dep/log/ws2:/tmp
           - /home/django/new_gai_dep/gailvlun:/home/django/gailvlun
           - /home/django/new_gai_dep/all_project/api.gailvlun.site:/etc/letsencrypt/live/api.gailvlun.site:ro
    rabbit1:
        restart: always
        image: "rabbitmq:3-management"
        hostname: "rabbit1"
        environment:
            RABBITMQ_ERLANG_COOKIE: "SWQOKODSQALRPCLNMEQG"
            RABBITMQ_DEFAULT_USER: "rabbitmq"
            RABBITMQ_DEFAULT_PASS: "abc123"
            RABBITMQ_DEFAULT_VHOST: "gai_vhost"
        ports:
            - "5672:5672"
        labels:
            NAME: "rabbitmq1"
        volumes:
            - /home/django/new_gai_dep/data/rabbit1:/var/lib/rabbitmq
        networks:
            celery-broker:
    redis:
        restart: always
        build: 
           context: ../redis
           dockerfile: Dockerfile
        ports:
            - "6381:6379"
        networks:
           ws-redis:
        volumes:
            - /home/django/new_gai_dep/data/redis:/data
    pgmaster:
        restart: always
        image: kevin2333/my_postgres
        environment:
            NODE_ID: 1 # Integer number of node (not required if can be extracted from NODE_NAME var, e.g. node-45 => 1045)
            NODE_NAME: node1 # Node name
            CLUSTER_NODE_NETWORK_NAME: pgmaster # (default: hostname of the node)
            
            PARTNER_NODES: "pgmaster,pgslave1,pgslave3"
            REPLICATION_PRIMARY_HOST: pgmaster # That should be ignored on the same node
            
            NODE_PRIORITY: 100  # (default: 100)
            SSH_ENABLE: 1
            #database we want to use for application
            POSTGRES_PASSWORD: abcd1234
            POSTGRES_USER: postgres
            POSTGRES_DB: gaidb
            CLEAN_OVER_REWIND: 0
            CONFIGS: "listen_addresses:'*',max_replication_slots:5"
                                  # in format variable1:value1[,variable2:value2[,...]] if CONFIGS_DELIMITER_SYMBOL=, and CONFIGS_ASSIGNMENT_SYMBOL=:
                                  # used for pgpool.conf file
            #defaults:
            CLUSTER_NAME: pg_cluster # default is pg_cluster
            REPLICATION_DB: replication_db # default is replication_db
            REPLICATION_USER: replication_user # default is replication_user
            REPLICATION_PASSWORD: replication_pass # default is replication_pass
            
        ports:
            - 5422:5432
        volumes:
            - /etc/localtime:/etc/localtime:ro
            - pgmaster:/var/lib/postgresql/data
        networks:
            cluster:
                aliases:
                    - pgmaster
#<<< Branch 1
    pgslave1:
        restart: always
        image: kevin2333/my_postgres
        environment:
            NODE_ID: 2
            NODE_NAME: node2
            CLUSTER_NODE_NETWORK_NAME: pgslave1 # (default: hostname of the node)
            
            PARTNER_NODES: "pgmaster,pgslave1,pgslave3"
            REPLICATION_PRIMARY_HOST: pgmaster
            CLEAN_OVER_REWIND: 1
            CONFIGS: "max_replication_slots:10" #some overrides
        ports:
            - 5441:5432
        volumes:
            - /etc/localtime:/etc/localtime:ro
            - pgslave1:/var/lib/postgresql/data
        networks:
            cluster:
                aliases:
                    - pgslave1

    # Add more slaves if required
    pgslave2:
        restart: always
        image: kevin2333/my_postgres
        environment:
            NODE_ID: 3
            NODE_NAME: node3
            CLUSTER_NODE_NETWORK_NAME: pgslave2 # (default: hostname of the node)

            REPLICATION_PRIMARY_HOST: pgslave1 # I want to have cascade Streeming replication
            #USE_REPLICATION_SLOTS: 0
        ports:
            - 5442:5432
        volumes:
            - /etc/localtime:/etc/localtime:ro
            - pgslave2:/var/lib/postgresql/data
        networks:
            cluster:
                aliases:
                    - pgslave2
#>>> Branch 1
#<<< Branch 2
    pgslave3:
        restart: always
        image: kevin2333/my_postgres
        environment:
            NODE_ID: 4
            NODE_NAME: node4
            CLUSTER_NODE_NETWORK_NAME: pgslave3 # (default: hostname of the node)

            cluster:
                aliases:
                    - pgslave2
#>>> Branch 1
#<<< Branch 2
    pgslave3:
        restart: always
        image: kevin2333/my_postgres
        environment:
            NODE_ID: 4
            NODE_NAME: node4
            CLUSTER_NODE_NETWORK_NAME: pgslave3 # (default: hostname of the node)

            PARTNER_NODES: "pgmaster,pgslave1,pgslave3"
            REPLICATION_PRIMARY_HOST: pgmaster
            NODE_PRIORITY: 200  # (default: 100)
            CLEAN_OVER_REWIND: 1
        ports:
            - 5443:5432
        volumes:
            - /etc/localtime:/etc/localtime:ro
            - pgslave3:/var/lib/postgresql/data
        networks:
            cluster:
                aliases:
                    - pgslave3

    pgslave4:
        restart: always
        image: kevin2333/my_postgres
        environment:
            NODE_ID: 5
            NODE_NAME: node5
            CLUSTER_NODE_NETWORK_NAME: pgslave4 # (default: hostname of the node)

            REPLICATION_PRIMARY_HOST: pgslave3
            #USE_REPLICATION_SLOTS: 0
        ports:
            - 5444:5432
        volumes:
            - /etc/localtime:/etc/localtime:ro
            - pgslave4:/var/lib/postgresql/data
        networks:
            cluster:
                aliases:
                    - pgslave4
#>>> Branch 2
    backup:
        restart: always
        image: kevin2333/my_postgres_backup
        environment:
            REPLICATION_USER: replication_user # default is replication_user
            REPLICATION_PASSWORD: replication_pass # default is replication_pass
            REPLICATION_HOST: pgmaster
            POSTGRES_PASSWORD: abcd1234
            POSTGRES_USER: postgres
            POSTGRES_DB: gaidb
            SSH_ENABLE: 1
            BACKUP_SCHEDULE: "*/30 */5 * * *"
        volumes:
            - backup:/var/backups
        networks:
            cluster:
                aliases:
                    - backup
    pgpool:
        restart: always
        image: kevin2333/my_pgpool
        environment:
            PCP_USER: pcp_user
            PCP_PASSWORD: pcp_pass
            WAIT_BACKEND_TIMEOUT: 60

            CHECK_USER: postgres
            CHECK_PASSWORD: abcd1234
            CHECK_PGCONNECT_TIMEOUT: 3 #timout for checking if primary node is healthy
            SSH_ENABLE: 1
            DB_USERS: postgres:abcd1234 # in format user:password[,user:password[...]]
            BACKENDS: "0:pgmaster:5432:1:/var/lib/postgresql/data:ALLOW_TO_FAILOVER,1:pgslave1::::,3:pgslave3::::,2:pgslave2::::" #,4:pgslaveDOES_NOT_EXIST::::
            REQUIRE_MIN_BACKENDS: 3 # minimal number of backends to start pgpool (some might be unreachable)
            CONFIGS: "num_init_children:250,max_pool:4"
        ports:
            - 5430:5432
            - 9898:9898 # PCP
        networks:
            cluster:
                aliases:
                    - pgpool
